@charset "UTF-8";

/* ---- 共通 ---- */

/* スキルアップテクニック1-1
 * html要素に対しmin-heightプロパティを付けることで、
 * 最小でも表示領域が画面の高さを持つことになります。
 * これにより画面の一番下まで表示領域を拡大し、
 * footerを画面下に配置することができます。
 * positionプロパティは絶対位置表示を可能にし、
 * 値relativeを設定することで子要素(今回はfooter要素)の配置基準になります。
 */
html {
	min-height: 100%;
	position: relative;
}

/* スキルアップテクニック1-2
 * 下方向にmarginの余白を設定することでfooterの表示領域を確保します。
 * paddingプロパティの値0は、body要素が持つ枠の領域を取り消します。
 */
body {
	margin: 0 0 30px;
	padding: 0;
	color:#F8F0D8;
}

h2,
h3 {
	font-size: 1em;
	font-weight: normal;
	margin: 0;
	padding: 0;
}

/* スキルアップテクニック2
 * displayプロパティでは表示方式を変更することができます。
 * block表示だったform要素をinline表示に変更することで、
 * ボタンを横並びにすることができます。
 */
form {
	display: inline;
}

table {
	width:100%;
	background-color: #F8F0D8;
	border-collapse: collapse;
	margin: 0px auto 20px;
}

ul,
li {
	margin: 0;
	padding: 0;
}
li {
	list-style-type: none;
}


/* スキルアップテクニック3
 * overflowプロパティの値hiddenを設定することで、要素は適切な高さをもつことができます。
 * 子要素にfloatプロパティを設定している場合、その子要素の高さを親要素は知ることができなくなります。
 * しかしoverflowプロパティの値hiddenを設定することで、本来の高さを取り戻すことができます。
 */
.container {
	width: 960px;
	margin: 0 auto;
	overflow: hidden;
	float: none;
}
body > .container {
	margin-bottom: 50px;
	margin-top: 15px;
	background:#F8F0D8;
}
.content {
	padding:30px 0 60px;
}

/* ---- ヘッダー ---- */
header {
	background: #fff;
	font-family: serif;
	padding: 10px 0;
}
.admin header {
	background: #ff8669;
}

/* スキルアップテクニック4
 * font-sizeの単位emは親要素に設定されたfont-sizeの相対指定となります。
 * 親要素のfont-sizeが16px設定だとしたら、1.8emでは1.8倍、即ち28.8pxの大きさとなります。
 * デザインにはジャンプ率の考え方があり、基本の大きさからの倍率で文字サイズを決めることが多々あります。
 * その様な場合、em指定をしておくと便利です。
 * 基本サイズが変更になったとしても、比例して大きさが変化します。
 */
.site_title {
	float: left;
	font-size: 1.8em;
	font-weight: normal;
	}
body {
   padding: 0;
   margin: 0;
   background: #F8F0D8;
   color: #EEEEEE;
}
/* スキルアップテクニック5
 * 横幅の％指定はブロックの数が決まっている際、設定が容易に行えます。
 * また、レスポンシブにも対応できるため、px指定と比べ柔軟性に優れます。
 */
.user_info {
	width:250px;/* ---- 辛による編集 2023/06/09 ---- */
	float:right;
	text-align: right;
	padding-top: 15px;
}
.user_info a {
	text-decoration: none;
}

/* スキルアップテクニック6
 * :hoverは擬似クラスの一種で、カーソルをその要素に重ねることで動作します。
 * user_infoクラスがつけられた要素の子要素であるa要素にカーソルが重なると、
 * 下線が表示されます。
 */
.user_info a:hover {
	text-decoration: underline;
}

.user_info .pipeline {
	padding:0 8px;
}



/* ---- タイトル共通 ---- */
.search_area .title,
.main .title
 {
	background-color: #714D40;
	margin: 0;
	padding: 5px 8px;
	color: #F8F0D8;
	text-shadow: 1px 1px 1px #12526d;
}


/* ---- ナビゲーションバー ---- */
.navi_area {
	background: #714D40;
}
.navi_menu {
	width: 960px;
	padding:12px 0;
	margin: 0 auto;
}

.navi_menu li {
	display: inline-block;
	width: 50px;
	float: right;  	/* ---- 辛による編集 2023/06/09 ---- */
	margin-top: 15px;/* ---- 辛による編集 2023/06/09 ---- */
	
}
.navi_menu a {
	display: inline-block;
	height: 40px;
	width: 40px;
	font-size: 1.5em;
	line-height: 2.5em;
	color:#F8F0D8;
	border: 1px solid #fff;
	text-align: center;
	text-decoration: none;
	background: #fff;
	transition: 0.18s;
}
.navi_menu a:hover {
	background: #FFD24E;
	color: #fff;
	text-shadow: 1px 1px 1px #12526d;
	border-color : #FFD24E;
}
.navi_menu li:first-of-type a{
	border-radius: 6px 6px 6px 6px;
}
.navi_menu li:last-of-type a{
	border-radius: 6px 6px 6px 6px;
}
/**
*髙橋の編集06/16
*/
.menu-btn {
    position: absolute;
    top: 135px;
    left: 10px;
    display: flex;
    height: 60px;
    width: 60px;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    background-color:rgb(255, 255, 255, 0);
    transition: all 0.5s;
}
.menu-btn span,
.menu-btn span:before,
.menu-btn span:after {
    content: '';
    display: block;
    height: 3px;
    width: 25px;

    border-radius: 3px;
    background-color: #ffffff;
    position: absolute;
    transition: all 0.5s;
}
.menu-btn span:before {
    bottom: 8px;
}
.menu-btn span:after {
    top: 8px;
}
#menu-btn-check:checked+.menu-btn {
    position: fixed;
    top: 0px;
    left: 30%;
    display: flex;
    height: 50px;
    width: 50px;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    background-color:#714D40;
    transition: all 0.5s;
}
#menu-btn-check:checked ~ .menu-btn span {
    background-color: rgb(255, 255, 255, 0);
     position: absolute;
    top: 23px;
    left: 12px;
    z-index: 1000;    
}
#menu-btn-check:checked ~ .menu-btn span::before {
    bottom: 0;
    transform: rotate(45deg);
}
#menu-btn-check:checked ~ .menu-btn span::after {
    top: 0;
    transform: rotate(-45deg);
}
#menu-btn-check {
    display: none;
}
.menu-content {
    width: 30%;
    height: 100%;
    position: fixed;
    top: 0;
    right: 100%;/*leftの値を変更してメニューを画面外へ*/
    z-index: 1000;
    background-color: #63822d;
    transition: all 0.5s;/*アニメーション設定*/
    overflow: scroll;
}

#menu-btn-check:checked ~ .menu-content {
    right: 70%;/*メニューを画面内へ*/
}
.menu-content ul {
    padding: 70px 10px 0;
}
.menu-content ul li {
    border-bottom: solid 1px #ffffff;
    list-style: none;
}
.menu-content ul li a {
    display: block;
    width: 100%;
    font-size: 15px;
    box-sizing: border-box;
    color:#fff;
    text-decoration: none;
    padding: 9px 15px 10px 0;
    position: relative;
}
.menu-content ul li a::before {
    content: "";
    width: 7px;
    height: 7px;
    border-top: solid 2px #ffffff;
    border-right: solid 2px #ffffff;
    transform: rotate(45deg);
    position: absolute;
    right: 11px;
    top: 16px;
}
/*ナビゲーション 領域外の装飾*/

.close-content {
    width: 100%;
}

/* ---- サイドバー ---- */
/*
*髙橋の編集
*/
#picture {
   margin: 0 auto;
   width: 500px;
   max-width: 100%;
   text-align: center;
}
#picture input[type=radio] {
   display: none;
}
#picture label {
   cursor:pointer;
   text-decoration: none;
   padding: 5px;
}
#bg-pic {
   background: #fff;
   position: relative;
   z-index: 1;
   width: 100%;
   overflow: hidden;
   /* ボックスのはみ打た部分を隠す */
   transform: scale(1,1);
   /* XY軸(横縦)の伸縮率を指定 */
   transition-duration:.8s;
   /* アニメーションの開始から終了までの時間を指定 */
}
#bg-pic:hover {
  transform: scale(1.1,1.1);
  /* XY軸(横縦)の伸縮率を指定 */
}
/* スライダー画像の位置を比率で指定 */
#pic1:checked ~ #bg-pic .inside {
   margin-left: 0;
}
#pic2:checked ~ #bg-pic .inside {
   margin-left: -100%;
}
#pic3:checked ~ #bg-pic .inside {
   margin-left: -200%;
}
#pic4:checked ~ #bg-pic .inside {
   margin-left: -300%;
}
#bg-pic .inside {
   transition-duration:.8s;
   /* アニメーションの開始から終了までの時間を指定 */
   width: 400%;
   line-height: 0;
   height: 300px;
}
#bg-pic .pic {
   width: 25%;
   float:left;
   display: flex;
   justify-content: center;
   align-items: center;
   /* 上３行でボックスをど真ん中に指定 */
   height: 100%;
   background-size: cover;
   transition-duration:.8s;
   /* アニメーションの開始から終了までの時間を指定 */
   filter: opacity(100%);
   /* hover前：filterプロパティのopacityで透明度を指定 */
}
#bg-pic .pic:hover {
  background-size: cover;
  filter: opacity(50%);
  /* hover後：filterプロパティのopacityで透明度を指定 */
}
/* 画像urlを指定 */
#bg-pic .pic_1 {
   background-image: url("../images/unagi.jpg");
}
#bg-pic .pic_2 {
   background-image: url("../images/kyanpu.jpg");
}
#bg-pic .pic_3 {
   background-image: url("../images/interia.jpg");
}
#bg-pic .pic_4 {
   background-image: url("../images/autodoa.jpg");
}
/* スライダーの送りボタンを指定 */
#slide-buttons {
   margin: 50px 0 0;
   text-align: center;
}
#slide-buttons label {
   display: inline-block;
   width: 20px;
   height: 20px;
   border-radius:0%;
   background: gainsboro;
   margin: 0 10px;
   transform: scale(1,1);
   /* XY軸(横縦)の伸縮率を指定 */
   transition-duration:.5s;
   /* アニメーションの開始から終了までの時間を指定 */
}
#slide-buttons label:hover {
  transform: scale(1.5,1.5);
  /* XY軸(横縦)の伸縮率を指定 */
}
/* ナビゲーションボタンをcheckした時の背景色を指定 */
#pic1:checked ~ #slide-buttons label:nth-child(1),
#pic2:checked ~ #slide-buttons label:nth-child(2),
#pic3:checked ~ #slide-buttons label:nth-child(3),
#pic4:checked ~ #slide-buttons label:nth-child(4) {
   background: #444;
}
/**
 * Change animation duration
 */
.animated {
  -webkit-animation-duration: 1.5s;
  animation-duration: 1.5s;
}
@-webkit-keyframes fadeInRight {
  from {
    opacity: 0;
    -webkit-transform: translate3d(100px, 0, 0);
    transform: translate3d(100px, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none;
  }
}
@keyframes fadeInRight {
  from {
    opacity: 0;
    -webkit-transform: translate3d(100px, 0, 0);
    transform: translate3d(100px, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none;
  }
}
.fadeInRight {
  -webkit-animation-name: fadeInRight;
  animation-name: fadeInRight;
}
/*
*/
.search,
aside.admin_menu {
	float: left;
	width: 20%;
}

.search .title,
.admin_menu .title {
	border-radius: 6px 6px 0 0;
	text-align: center;
	font-size: 1.1em;
}
.search_area .title{
	border-radius: 6px 6px 6px 6px;
	text-align: center;
	font-size: 1.1em;
}

.admin_menu .title {
	background: #ff6c49;
	padding: 5px;
}
.admin_menu_list .title {
	background: #ff6c49;
}
.search .form {
	padding: 15px 0 20px 5px; /* ---- 辛による編集 2023/06/09 ---- */
}
.admin_menu .display_list {
	display: block;
	padding: 10px;
	border-right: 1px solid #aaa;
	border-bottom: 1px solid #aaa;
	border-left: 1px solid #aaa;
	text-align: center;
	text-decoration: none;
	transition: background-color 0.18s;
}

.admin_menu .display_list:link,
.admin_menu .display_list:visited,
.admin_menu .display_list:hover,
.admin_menu .display_list:active {
	color: #2a2a2a;
}

.admin_menu .display_list:hover {
	background: #ffc6b9;
}
.admin_menu li:last-of-type .display_list {
	border-radius: 0 0 6px 6px;
}


/* ---- メイン ---- */
.main {
	width: 100%;
	padding-bottom: 50px;
}

.admin_menu .main {
	width: 100%;
	float: none;
}

.user .main .title,
.admin .main .title {
	padding: 8px 15px;
	position: relative;
	font-size: 1.5rem;
	}
.main .title::before,
.admin .main .title::before {
	position: absolute;
	content: '';
	top: 100%;
	left: 0;
	border: none;
	border-bottom: solid 10px transparent;
	border-right: solid 20px #CEA18B;
}
.admin .main .title.no_shadow::before {
	display: none;
}
.admin .main .title {
	background: #ff6c49;
}
.admin_menu .admin_menu_list{
	padding: 5px 10px;
	font-size: 1.5em;
	width: 50%;
	margin: 80px auto 0;
}
.admin_menu_list .title_area {
	background: #ff6c49;
	text-align: center;
	border: 1px solid #ff6c49;
	border-radius: 6px 6px 0 0;
	font-size: 1.2em;
	color: #fff;
	text-shadow: 1px 1px 1px #333;
	padding: 5px 0;
}
.admin_menu_list .title_area_no_shadow {
	background: #ff6c49;
	text-align: center;
	border: 1px solid #ff6c49;
	border-radius: 6px 6px 0 0;
	font-size: 1.2em;
	padding: 5px 0;
}
.admin_menu_list .link_area {
	margin: 0;
}
.admin_menu_list .link_area a{
    display: block;
    padding: 10px;
    border-right: 1px solid #aaa;
    border-bottom: 1px solid #aaa;
    border-left: 1px solid #aaa;
    text-align: center;
    text-decoration: none;
    transition: background-color 0.18s;
}
.admin_menu_list .link_area a:hover{
	background: #ffc6b9;
}
.admin_menu_list .link_area:last-of-type a{
	border-radius: 0 0 6px 6px;
}

.error_mess_maintenance,
.input_message,
.complete_message,
.check_message {
	padding-top: 20px;
	font-size: 1.2em;
}
.check_error_message {
	padding-top: 20px;
	font-size: 1.2em;
	color:#C00;
}
.complete_message,
.complete_link {
	font-size: 1.2em;
	margin-top: 30px;
	padding-left: 30px;
}
.complete_link a:hover {
	color: #d34320;
}
/*髙橋の編集*/
.ordermenu body{
	color:#F8F0D8;
	background:#714D40;
	margin: 0 0 30px;
	padding: 0;	
}

/* ---- フッター ---- */

/* スキルアップテクニック1-3
 * footer要素の表示位置は画面下、もしくはページ下に設定すると見やすいでしょう。
 * その為に1-1ではhtml要素の表示位置を広げ、配置基準としました。
 * 1-2では他の表示とfooter要素が被らないよう余白を設定しました。
 * ここではfooter要素にpositionプロパティの値をabsoluteにすることで絶対位置表示を行います。
 * 絶対位置表示の基準はpositionプロパティの値を持つ親要素となり、
 * 今回は画面いっぱいのhtml要素がそれになります。
 * bottomプロパティは基準からの配置位置を決定し、今回は0px。
 * つまりhtml要素の一番下から0pxの位置に表示されることとなり、
 * footer要素は画面、もしくはページの最下部に表示されるようになります。
 */
footer {
	background-color: #714D40;
	text-align: center;
	position: absolute;
	bottom: 0;
	width: 100%;
}
.admin footer {
	background: #ff8669;
}
small {
	height: 30px;
	line-height:30px;
	text-shadow: 1px 1px 1px #000;
	font-size: 8pt;
}